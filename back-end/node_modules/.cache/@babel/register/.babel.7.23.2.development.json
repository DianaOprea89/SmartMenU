{"{\"assumptions\":{},\"sourceRoot\":\"D:\\\\laragon\\\\www\\\\Node exercises\\\\SmartMenU\\\\back-end\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\laragon\\\\www\\\\Node exercises\\\\SmartMenU\\\\back-end\",\"filename\":\"D:\\\\laragon\\\\www\\\\Node exercises\\\\SmartMenU\\\\back-end\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\laragon\\\\www\\\\Node exercises\\\\SmartMenU\\\\back-end\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.2:development":{"value":{"code":"import express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport path from 'path';\nimport bcrypt from 'bcrypt';\nimport cors from 'cors';\nconst jwt = require('jsonwebtoken');\nrequire('dotenv').config();\nconst app = express();\nconst corsOptions = {\n  origin: 'http://localhost:8080',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  credentials: true,\n  optionsSuccessStatus: 204\n};\napp.use(cors(corsOptions));\nlet db;\nconst connectionString = process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017';\nconsole.log(`Connecting to: ${connectionString}`);\nMongoClient.connect(connectionString, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(client => {\n  db = client.db('SmartMenu');\n  console.log('Connected to MongoDB');\n  const usersCollection = db.collection('users');\n  async function runMigration() {\n    try {\n      const result = await usersCollection.updateMany({}, {\n        $set: {\n          name: '',\n          email: '',\n          password: '',\n          passwordConfirm: '',\n          newField: 'default value'\n        }\n      });\n      console.log('Documents updated:', result.modifiedCount);\n    } catch (error) {\n      console.error('Error updating documents:', error);\n    }\n  }\n}).catch(error => {\n  console.error('Failed to connect to MongoDB', error);\n  process.exit(1);\n});\napp.use(bodyParser.json());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsIk1vbmdvQ2xpZW50IiwicGF0aCIsImJjcnlwdCIsImNvcnMiLCJqd3QiLCJyZXF1aXJlIiwiY29uZmlnIiwiYXBwIiwiY29yc09wdGlvbnMiLCJvcmlnaW4iLCJtZXRob2RzIiwiY3JlZGVudGlhbHMiLCJvcHRpb25zU3VjY2Vzc1N0YXR1cyIsInVzZSIsImRiIiwiY29ubmVjdGlvblN0cmluZyIsInByb2Nlc3MiLCJlbnYiLCJNT05HT0RCX1VSSSIsImNvbnNvbGUiLCJsb2ciLCJjb25uZWN0IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwidGhlbiIsImNsaWVudCIsInVzZXJzQ29sbGVjdGlvbiIsImNvbGxlY3Rpb24iLCJydW5NaWdyYXRpb24iLCJyZXN1bHQiLCJ1cGRhdGVNYW55IiwiJHNldCIsIm5hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwicGFzc3dvcmRDb25maXJtIiwibmV3RmllbGQiLCJtb2RpZmllZENvdW50IiwiZXJyb3IiLCJjYXRjaCIsImV4aXQiLCJqc29uIl0sInNvdXJjZVJvb3QiOiJEOlxcbGFyYWdvblxcd3d3XFxOb2RlIGV4ZXJjaXNlc1xcU21hcnRNZW5VXFxiYWNrLWVuZFxcc3JjXFwiLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xyXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gJ21vbmdvZGInO1xyXG5pbXBvcnQgIHBhdGggZnJvbSAncGF0aCdcclxuaW1wb3J0IGJjcnlwdCBmcm9tICdiY3J5cHQnO1xyXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcclxuY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xyXG5cclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcclxuY29uc3QgY29yc09wdGlvbnMgPSB7XHJcbiAgICBvcmlnaW46ICdodHRwOi8vbG9jYWxob3N0OjgwODAnLFxyXG4gICAgbWV0aG9kczogJ0dFVCxIRUFELFBVVCxQQVRDSCxQT1NULERFTEVURScsXHJcbiAgICBjcmVkZW50aWFsczogdHJ1ZSxcclxuICAgIG9wdGlvbnNTdWNjZXNzU3RhdHVzOiAyMDQsXHJcbn07XHJcbmFwcC51c2UoY29ycyhjb3JzT3B0aW9ucykpO1xyXG5sZXQgZGI7XHJcblxyXG5cclxuY29uc3QgY29ubmVjdGlvblN0cmluZyA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJIHx8ICdtb25nb2RiOi8vMTI3LjAuMC4xOjI3MDE3JztcclxuY29uc29sZS5sb2coYENvbm5lY3RpbmcgdG86ICR7Y29ubmVjdGlvblN0cmluZ31gKTtcclxuTW9uZ29DbGllbnQuY29ubmVjdChjb25uZWN0aW9uU3RyaW5nLCB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSwgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlIH0pXHJcbiAgICAudGhlbihjbGllbnQgPT4ge1xyXG4gICAgICAgIGRiID0gY2xpZW50LmRiKCdTbWFydE1lbnUnKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIE1vbmdvREInKTtcclxuXHJcblxyXG4gICAgICAgIGNvbnN0IHVzZXJzQ29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oJ3VzZXJzJyk7XHJcblxyXG4gICAgICAgIGFzeW5jIGZ1bmN0aW9uIHJ1bk1pZ3JhdGlvbigpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHVzZXJzQ29sbGVjdGlvbi51cGRhdGVNYW55KHt9LCB7XHJcbiAgICAgICAgICAgICAgICAgICAgJHNldDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZW1haWw6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZDogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkQ29uZmlybTogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0ZpZWxkOiAnZGVmYXVsdCB2YWx1ZSdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdEb2N1bWVudHMgdXBkYXRlZDonLCByZXN1bHQubW9kaWZpZWRDb3VudCk7XHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGRhdGluZyBkb2N1bWVudHM6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgfSlcclxuICAgIC5jYXRjaChlcnJvciA9PiB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGNvbm5lY3QgdG8gTW9uZ29EQicsIGVycm9yKTtcclxuICAgICAgICBwcm9jZXNzLmV4aXQoMSk7XHJcbiAgICB9KTtcclxuXHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQU8sTUFBTSxTQUFTO0FBQzdCLE9BQU9DLFVBQVUsTUFBTSxhQUFhO0FBQ3BDLFNBQVNDLFdBQVcsUUFBUSxTQUFTO0FBQ3JDLE9BQVFDLElBQUksTUFBTSxNQUFNO0FBQ3hCLE9BQU9DLE1BQU0sTUFBTSxRQUFRO0FBQzNCLE9BQU9DLElBQUksTUFBTSxNQUFNO0FBQ3ZCLE1BQU1DLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUNuQ0EsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDQyxNQUFNLENBQUMsQ0FBQztBQUcxQixNQUFNQyxHQUFHLEdBQUdULE9BQU8sQ0FBQyxDQUFDO0FBQ3JCLE1BQU1VLFdBQVcsR0FBRztFQUNoQkMsTUFBTSxFQUFFLHVCQUF1QjtFQUMvQkMsT0FBTyxFQUFFLGdDQUFnQztFQUN6Q0MsV0FBVyxFQUFFLElBQUk7RUFDakJDLG9CQUFvQixFQUFFO0FBQzFCLENBQUM7QUFDREwsR0FBRyxDQUFDTSxHQUFHLENBQUNWLElBQUksQ0FBQ0ssV0FBVyxDQUFDLENBQUM7QUFDMUIsSUFBSU0sRUFBRTtBQUdOLE1BQU1DLGdCQUFnQixHQUFHQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsV0FBVyxJQUFJLDJCQUEyQjtBQUMvRUMsT0FBTyxDQUFDQyxHQUFHLENBQUUsa0JBQWlCTCxnQkFBaUIsRUFBQyxDQUFDO0FBQ2pEZixXQUFXLENBQUNxQixPQUFPLENBQUNOLGdCQUFnQixFQUFFO0VBQUVPLGVBQWUsRUFBRSxJQUFJO0VBQUVDLGtCQUFrQixFQUFFO0FBQUssQ0FBQyxDQUFDLENBQ3JGQyxJQUFJLENBQUNDLE1BQU0sSUFBSTtFQUNaWCxFQUFFLEdBQUdXLE1BQU0sQ0FBQ1gsRUFBRSxDQUFDLFdBQVcsQ0FBQztFQUMzQkssT0FBTyxDQUFDQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7RUFHbkMsTUFBTU0sZUFBZSxHQUFHWixFQUFFLENBQUNhLFVBQVUsQ0FBQyxPQUFPLENBQUM7RUFFOUMsZUFBZUMsWUFBWUEsQ0FBQSxFQUFHO0lBQzFCLElBQUk7TUFDQSxNQUFNQyxNQUFNLEdBQUcsTUFBTUgsZUFBZSxDQUFDSSxVQUFVLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDaERDLElBQUksRUFBRTtVQUNGQyxJQUFJLEVBQUUsRUFBRTtVQUNSQyxLQUFLLEVBQUUsRUFBRTtVQUNUQyxRQUFRLEVBQUUsRUFBRTtVQUNaQyxlQUFlLEVBQUUsRUFBRTtVQUNuQkMsUUFBUSxFQUFFO1FBQ2Q7TUFDSixDQUFDLENBQUM7TUFDRmpCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9CQUFvQixFQUFFUyxNQUFNLENBQUNRLGFBQWEsQ0FBQztJQUMzRCxDQUFDLENBQUMsT0FBT0MsS0FBSyxFQUFFO01BQ1puQixPQUFPLENBQUNtQixLQUFLLENBQUMsMkJBQTJCLEVBQUVBLEtBQUssQ0FBQztJQUNyRDtFQUNKO0FBSUosQ0FBQyxDQUFDLENBQ0RDLEtBQUssQ0FBQ0QsS0FBSyxJQUFJO0VBQ1puQixPQUFPLENBQUNtQixLQUFLLENBQUMsOEJBQThCLEVBQUVBLEtBQUssQ0FBQztFQUNwRHRCLE9BQU8sQ0FBQ3dCLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDbkIsQ0FBQyxDQUFDO0FBRU5qQyxHQUFHLENBQUNNLEdBQUcsQ0FBQ2QsVUFBVSxDQUFDMEMsSUFBSSxDQUFDLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["express","bodyParser","MongoClient","path","bcrypt","cors","jwt","require","config","app","corsOptions","origin","methods","credentials","optionsSuccessStatus","use","db","connectionString","process","env","MONGODB_URI","console","log","connect","useNewUrlParser","useUnifiedTopology","then","client","usersCollection","collection","runMigration","result","updateMany","$set","name","email","password","passwordConfirm","newField","modifiedCount","error","catch","exit","json"],"sourceRoot":"D:\\laragon\\www\\Node exercises\\SmartMenU\\back-end\\src\\","sources":["server.js"],"sourcesContent":["import express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\nimport  path from 'path'\r\nimport bcrypt from 'bcrypt';\r\nimport cors from 'cors';\r\nconst jwt = require('jsonwebtoken');\r\nrequire('dotenv').config();\r\n\r\n\r\nconst app = express();\r\nconst corsOptions = {\r\n    origin: 'http://localhost:8080',\r\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\r\n    credentials: true,\r\n    optionsSuccessStatus: 204,\r\n};\r\napp.use(cors(corsOptions));\r\nlet db;\r\n\r\n\r\nconst connectionString = process.env.MONGODB_URI || 'mongodb://127.0.0.1:27017';\r\nconsole.log(`Connecting to: ${connectionString}`);\r\nMongoClient.connect(connectionString, { useNewUrlParser: true, useUnifiedTopology: true })\r\n    .then(client => {\r\n        db = client.db('SmartMenu');\r\n        console.log('Connected to MongoDB');\r\n\r\n\r\n        const usersCollection = db.collection('users');\r\n\r\n        async function runMigration() {\r\n            try {\r\n                const result = await usersCollection.updateMany({}, {\r\n                    $set: {\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        passwordConfirm: '',\r\n                        newField: 'default value'\r\n                    }\r\n                });\r\n                console.log('Documents updated:', result.modifiedCount);\r\n            } catch (error) {\r\n                console.error('Error updating documents:', error);\r\n            }\r\n        }\r\n\r\n\r\n\r\n    })\r\n    .catch(error => {\r\n        console.error('Failed to connect to MongoDB', error);\r\n        process.exit(1);\r\n    });\r\n\r\napp.use(bodyParser.json());\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,WAAW,QAAQ,SAAS;AACrC,OAAQC,IAAI,MAAM,MAAM;AACxB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,IAAI,MAAM,MAAM;AACvB,MAAMC,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AACnCA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAG1B,MAAMC,GAAG,GAAGT,OAAO,CAAC,CAAC;AACrB,MAAMU,WAAW,GAAG;EAChBC,MAAM,EAAE,uBAAuB;EAC/BC,OAAO,EAAE,gCAAgC;EACzCC,WAAW,EAAE,IAAI;EACjBC,oBAAoB,EAAE;AAC1B,CAAC;AACDL,GAAG,CAACM,GAAG,CAACV,IAAI,CAACK,WAAW,CAAC,CAAC;AAC1B,IAAIM,EAAE;AAGN,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,WAAW,IAAI,2BAA2B;AAC/EC,OAAO,CAACC,GAAG,CAAE,kBAAiBL,gBAAiB,EAAC,CAAC;AACjDf,WAAW,CAACqB,OAAO,CAACN,gBAAgB,EAAE;EAAEO,eAAe,EAAE,IAAI;EAAEC,kBAAkB,EAAE;AAAK,CAAC,CAAC,CACrFC,IAAI,CAACC,MAAM,IAAI;EACZX,EAAE,GAAGW,MAAM,CAACX,EAAE,CAAC,WAAW,CAAC;EAC3BK,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EAGnC,MAAMM,eAAe,GAAGZ,EAAE,CAACa,UAAU,CAAC,OAAO,CAAC;EAE9C,eAAeC,YAAYA,CAAA,EAAG;IAC1B,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMH,eAAe,CAACI,UAAU,CAAC,CAAC,CAAC,EAAE;QAChDC,IAAI,EAAE;UACFC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZC,eAAe,EAAE,EAAE;UACnBC,QAAQ,EAAE;QACd;MACJ,CAAC,CAAC;MACFjB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,MAAM,CAACQ,aAAa,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZnB,OAAO,CAACmB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD;EACJ;AAIJ,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAI;EACZnB,OAAO,CAACmB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACpDtB,OAAO,CAACwB,IAAI,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC;AAENjC,GAAG,CAACM,GAAG,CAACd,UAAU,CAAC0C,IAAI,CAAC,CAAC,CAAC"}},"mtime":1698222381286}}